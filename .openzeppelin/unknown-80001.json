{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xAC6df8707559855d9201006B2877F24b02fD2Fe6",
    "txHash": "0xabbdcd0fc7c813712e3615e66ccd2a0974949967a1d952e4d99a5932e621a93c"
  },
  "proxies": [
    {
      "address": "0xd68d0ccBd5ebDc28B9Af87442a751BEDbE148491",
      "txHash": "0x126d9b0d41179dd72cfb14d8759296e98e9b813208ca5a3ad11816266cbc66d0",
      "kind": "transparent"
    },
    {
      "address": "0x6bC8304c682D353F9CEdBF863E5596caE95fFaED",
      "txHash": "0x511531be08e3db32251470db3db60674d6eff56b1e7ea25be168fc34094ba448",
      "kind": "transparent"
    },
    {
      "address": "0x6Dd996CDb95dAd91C6d32A9D26dE1FEdFCd1cC5E",
      "txHash": "0xd8e186dd259ff608ced6d05cb4862e33c588cb15fbeeb457a281e2a5037e3b0a",
      "kind": "transparent"
    },
    {
      "address": "0x929DB46E85aA08eD8241b4cfFbf6072181a1731a",
      "txHash": "0xca5c6d857bcaa2a8ceaea989c9b275b5f7badaea83a27e387438780285f0cdc1",
      "kind": "transparent"
    }
  ],
  "impls": {
    "5bbd72e4853a8b09d92a32c7a29e05461ea54880169782f556df2697e1256a49": {
      "address": "0x7Fae4A5Aa1fe95F2420F2108699DCbF570d8c1d2",
      "txHash": "0x47fec5302b2293061bc8ad3d961e5f3fba7b262ab9239d529c0f1c6e549ba5e7",
      "layout": {
        "storage": [
          {
            "contract": "DankBankMarketData",
            "label": "virtualTokenPoolSupply",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DankBankMarketGSNData.sol:5"
          },
          {
            "contract": "DankBankMarketData",
            "label": "tokenPoolSupply",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DankBankMarketGSNData.sol:6"
          },
          {
            "contract": "DankBankMarketData",
            "label": "paymentToken",
            "type": "t_address",
            "src": "contracts/DankBankMarketGSNData.sol:7"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC2771ContextUpgradeable",
            "label": "_trustedForwarder",
            "type": "t_address",
            "src": "contracts/gsn/ERC2771ContextUpgradeable.sol:13"
          },
          {
            "contract": "ERC2771ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/gsn/ERC2771ContextUpgradeable.sol:47"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:33"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:36"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:39"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_tokenSupplies",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:41"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:490"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "fed1ff31269b069bf3c371fb598331390401e8b4712f0062a6c0384df54c78f3": {
      "address": "0x24AF6bcBA04cEF544e6Ab05120b8ba95B535BFb6",
      "txHash": "0x0245e29cef43c0b53f87c744e7ea01f83c6f16d2fd22d3712c2206f3e06f8563",
      "layout": {
        "storage": [
          {
            "label": "virtualTokenPoolSupply",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DankBankMarketGSNData",
            "src": "contracts/DankBankMarketGSNData.sol:5"
          },
          {
            "label": "tokenPoolSupply",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DankBankMarketGSNData",
            "src": "contracts/DankBankMarketGSNData.sol:6"
          },
          {
            "label": "paymentToken",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "DankBankMarketGSNData",
            "src": "contracts/DankBankMarketGSNData.sol:7"
          },
          {
            "label": "_initialized",
            "offset": 20,
            "slot": "2",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 21,
            "slot": "2",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_trustedForwarder",
            "offset": 0,
            "slot": "53",
            "type": "t_address",
            "contract": "ERC2771ContextUpgradeable",
            "src": "contracts/gsn/ERC2771ContextUpgradeable.sol:13"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "54",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC2771ContextUpgradeable",
            "src": "contracts/gsn/ERC2771ContextUpgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "103",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155LPTokenUpgradeable",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:33"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155LPTokenUpgradeable",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:36"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "155",
            "type": "t_string_storage",
            "contract": "ERC1155LPTokenUpgradeable",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:39"
          },
          {
            "label": "_tokenSupplies",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC1155LPTokenUpgradeable",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155LPTokenUpgradeable",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:490"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}

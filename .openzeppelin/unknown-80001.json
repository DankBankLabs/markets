{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xbC15ca785dD7104FFA5E55b0109999e0712E33d2",
    "txHash": "0x88084b4217be2ca3ffe410ea7b35f08264a0784a85f79acb20442e54237d0ada"
  },
  "proxies": [
    {
      "address": "0x7378902013055c2E360232c02E69C555be31F759",
      "txHash": "0x247c62eb95689a9b69d020ee07e7ce850c1c2a0a869097724b3ee6e24e62d9b5",
      "kind": "transparent"
    }
  ],
  "impls": {
    "3cccf051560be922a7c8a74c1a64166f8c3607ce6f0b0d5e0dafd0b6aa416a76": {
      "address": "0x136aAEb6229f3903DEC8240E1e1c10F9a5D2b072",
      "txHash": "0x3d1073943e35eb2d6dc86180cf864eaa5430bfa071e8c4f54525e85bad7a0bc8",
      "layout": {
        "storage": [
          {
            "label": "virtualTokenPoolSupply",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DankBankMarketGSNData",
            "src": "contracts/DankBankMarketGSNData.sol:5"
          },
          {
            "label": "tokenPoolSupply",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DankBankMarketGSNData",
            "src": "contracts/DankBankMarketGSNData.sol:6"
          },
          {
            "label": "paymentToken",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "DankBankMarketGSNData",
            "src": "contracts/DankBankMarketGSNData.sol:7"
          },
          {
            "label": "_initialized",
            "offset": 20,
            "slot": "2",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 21,
            "slot": "2",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_trustedForwarder",
            "offset": 0,
            "slot": "53",
            "type": "t_address",
            "contract": "ERC2771ContextUpgradeable",
            "src": "contracts/gsn/ERC2771ContextUpgradeable.sol:13"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "54",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC2771ContextUpgradeable",
            "src": "contracts/gsn/ERC2771ContextUpgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "103",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155LPTokenUpgradeable",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:33"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155LPTokenUpgradeable",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:36"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "155",
            "type": "t_string_storage",
            "contract": "ERC1155LPTokenUpgradeable",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:39"
          },
          {
            "label": "_tokenSupplies",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC1155LPTokenUpgradeable",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155LPTokenUpgradeable",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:490"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}

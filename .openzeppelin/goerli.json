{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x0988Fb1C153a6f6492218Ead6b17fd795d6D18F9",
    "txHash": "0x6a79c8df571487e21f7bc2139bc72febd26cbb761a647de995c3309592da324e",
    "deployTransaction": {
      "hash": "0x6a79c8df571487e21f7bc2139bc72febd26cbb761a647de995c3309592da324e",
      "type": 0,
      "accessList": null,
      "blockHash": null,
      "blockNumber": null,
      "transactionIndex": null,
      "confirmations": 0,
      "from": "0x781d31b302D8D9B834347bfcafD8e1e1dA470DfF",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x0267180004"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 5,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0xef7a00f60859c88ae0a9e10c42f421a458e467d645b008933c95b7aec8e29313",
      "s": "0x6be7dcec3c1e275a3dad5cd2fb283a8a54faa7fa6012385ac6e35f9ffebc6886",
      "v": 45,
      "creates": "0x0988Fb1C153a6f6492218Ead6b17fd795d6D18F9",
      "chainId": 5
    }
  },
  "proxies": [
    {
      "address": "0xe0424eCb102610348DD3e1F1bB59748E7e288196",
      "txHash": "0xd3c786581f10cd93ba8f29d49f65dcd9253b33005cf75e615c39c0e5f445b06d",
      "kind": "transparent"
    },
    {
      "address": "0x25F3E3C4db4F9F37Cec0d57FF16601DE0e448B11",
      "txHash": "0xe14b18529bc6db6f2be5f5939350883c70884bdd43609dd25a8c87f80b090454",
      "kind": "transparent"
    },
    {
      "address": "0x81A47880BefC90BdaE64C7BE3a533156C01Eac48",
      "txHash": "0x42f09f6574846bbcd26793c490f955052beafc82dd64d1a90c7dcb0e87c3d55b",
      "kind": "transparent"
    },
    {
      "address": "0x5898b8A25bb736E179Dbb8750d020A9777Fead99",
      "txHash": "0xe52430a50c0f693421d4a505e504c93245eb21f0dd865e97aa2d112546c2aff3",
      "kind": "transparent"
    }
  ],
  "impls": {
    "50204669df25b2879ba86f8bbcd49f1feed37aaa959abcb8aa59dc5ad310ee36": {
      "address": "0xF2123a03CffA6936109c437326C6b8E87A83Ce7E",
      "txHash": "0x35e37e39b096244fcef8b53a171e1c76f1c73446dc520bf7a8a5df8aa4cd910c",
      "layout": {
        "storage": [
          {
            "contract": "DankBankMarketData",
            "label": "virtualEthPoolSupply",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DankBankMarketData.sol:5"
          },
          {
            "contract": "DankBankMarketData",
            "label": "ethPoolSupply",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DankBankMarketData.sol:6"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/OpenZeppelin/Initializable.sol:22"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts/OpenZeppelin/Initializable.sol:27"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/OpenZeppelin/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/OpenZeppelin/utils/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:30"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:33"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:36"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_tokenSupplies",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:38"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:483"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "abadaff3f5f844966578dc77a07ce7e4dcadae157ed3d91b15470a861e782450": {
      "address": "0xf086092BE183cd0bE921ca6dE9ce029920E8A145",
      "txHash": "0x8ef7d45b7b1f7f8697050cf5f6e093795aa1d2a2982298ba4f43a6b8fc478b88",
      "layout": {
        "storage": [
          {
            "contract": "DankBankMarketData",
            "label": "virtualEthPoolSupply",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DankBankMarketData.sol:5"
          },
          {
            "contract": "DankBankMarketData",
            "label": "ethPoolSupply",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DankBankMarketData.sol:6"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:33"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:36"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:39"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_tokenSupplies",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:41"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:486"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "43abee4a248526ff24ac51bbeb10e79dd23d1476472542cd0debe925eaa0093c": {
      "address": "0x069734D757c12079Dd5ACCE5749bBb4e4ee3046f",
      "txHash": "0x92d4ddd0d2094a82763023fd45ddec354acd2d4235cf345032f0ea154e6fda8f",
      "layout": {
        "storage": [
          {
            "contract": "DankBankMarketData",
            "label": "virtualEthPoolSupply",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DankBankMarketData.sol:5"
          },
          {
            "contract": "DankBankMarketData",
            "label": "ethPoolSupply",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DankBankMarketData.sol:6"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:33"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:36"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:39"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_tokenSupplies",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:41"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:486"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2382ba7a3c50a99feae3fd05fb1f1eb74dc07a4853eb6d25b102397755fdcb8d": {
      "address": "0xC1E1e0250A6377A648bCEdC0AEDB562278d13B0C",
      "txHash": "0x9b2930e5cea6ffd8b79f0de8101b4fb6bc1ff5dce0c85fca03e2238ffa0a3804",
      "layout": {
        "storage": [
          {
            "contract": "DankBankMarketData",
            "label": "virtualEthPoolSupply",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DankBankMarketData.sol:5"
          },
          {
            "contract": "DankBankMarketData",
            "label": "ethPoolSupply",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DankBankMarketData.sol:6"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:33"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:36"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:39"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_tokenSupplies",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:41"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:486"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ec7fcd3ee5da2365b706e4c764a84786ab896f6e9c0528a20cd22bd5a4553ace": {
      "address": "0xf471D9502db5722E1CdAA1bD9624596Cc70E59aB",
      "txHash": "0xd8db568d6e2f0fe585fec935346001e8b920ed78a01c8409d6d8e19a8b4a9b92",
      "layout": {
        "storage": [
          {
            "contract": "DankBankMarketData",
            "label": "virtualEthPoolSupply",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DankBankMarketData.sol:5"
          },
          {
            "contract": "DankBankMarketData",
            "label": "ethPoolSupply",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DankBankMarketData.sol:6"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:33"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:36"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:39"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_tokenSupplies",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:41"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:486"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "12d5967283d2a56f32e92f7774dd1ba4b880415350ac237ad7a5c0aed7811dfd": {
      "address": "0x30373DC42519722b0D14c51Ec4F1De73e56BbFFc",
      "txHash": "0x0419af79b9516eeb65a8cdda8b9e57c23840ac7b6be12f088fe10ff538c66f3d",
      "layout": {
        "storage": [
          {
            "contract": "DankBankMarketData",
            "label": "virtualEthPoolSupply",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DankBankMarketData.sol:5"
          },
          {
            "contract": "DankBankMarketData",
            "label": "ethPoolSupply",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DankBankMarketData.sol:6"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:33"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:36"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:39"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_tokenSupplies",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:41"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:486"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "49a29850ed6ca8617c0f56dfeea90ec726f1e5716aaa546b6bd4eb9b7dbc87bc": {
      "address": "0x7152B5ED59A541A220bD7b470Ef539d1048a53Ae",
      "txHash": "0x17b2ed56a0d2167ed9d5197f1c07dbb184742f73bcaae5ca1eacb1aaa8b1d40c",
      "layout": {
        "storage": [
          {
            "contract": "DankBankMarketData",
            "label": "virtualEthPoolSupply",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DankBankMarketData.sol:5"
          },
          {
            "contract": "DankBankMarketData",
            "label": "ethPoolSupply",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DankBankMarketData.sol:6"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:33"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:36"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:39"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_tokenSupplies",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:41"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:486"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6738c761d40b75c1814b42c5962d6bfb7c141b7ceccbfbb4b364361cac6516e9": {
      "address": "0xbc65e683172d5102f5eE33492f1fCE42d57588Ab",
      "txHash": "0xa584b706ef639f0f77aabda3ecebbb17e98f78717b85604050f8d822e807d2b1",
      "layout": {
        "storage": [
          {
            "contract": "DankBankMarketData",
            "label": "virtualEthPoolSupply",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DankBankMarketData.sol:5"
          },
          {
            "contract": "DankBankMarketData",
            "label": "ethPoolSupply",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DankBankMarketData.sol:6"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:33"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:36"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:39"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_tokenSupplies",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:41"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:486"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e3c516cea97f7b6b2c86813bfb76c19663b3d6cc4b2bf4d996b3316e30310327": {
      "address": "0x4fF2b6E80AA0768b22a7Bca7dfE2D8785e66d8E7",
      "txHash": "0xbccab29934bedfa6e37ac8b7a76b5505236550b94665eab792fc2373529043c0",
      "layout": {
        "storage": [
          {
            "contract": "DankBankMarketData",
            "label": "virtualEthPoolSupply",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DankBankMarketData.sol:5"
          },
          {
            "contract": "DankBankMarketData",
            "label": "ethPoolSupply",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DankBankMarketData.sol:6"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC2771ContextUpgradeable",
            "label": "_trustedForwarder",
            "type": "t_address",
            "src": "contracts/gsn/ERC2771ContextUpgradeable.sol:13"
          },
          {
            "contract": "ERC2771ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/gsn/ERC2771ContextUpgradeable.sol:47"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:33"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:36"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:39"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_tokenSupplies",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:41"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:486"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "985fac5174f47a27d2f0ae5fbfa5cf4186f3977f4a97e79a017d8c6cbd10740a": {
      "address": "0x23611536fb36e70d65c3a30816C6d0faD211EF51",
      "txHash": "0x16e7f13e51b3dbecdc0da4e750ff3d3c5dc930ff0c888c8ee6c0ec1e68073723",
      "layout": {
        "storage": [
          {
            "contract": "DankBankMarketData",
            "label": "virtualEthPoolSupply",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DankBankMarketData.sol:5"
          },
          {
            "contract": "DankBankMarketData",
            "label": "ethPoolSupply",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DankBankMarketData.sol:6"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC2771ContextUpgradeable",
            "label": "_trustedForwarder",
            "type": "t_address",
            "src": "contracts/gsn/ERC2771ContextUpgradeable.sol:13"
          },
          {
            "contract": "ERC2771ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/gsn/ERC2771ContextUpgradeable.sol:47"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:33"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:36"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:39"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_tokenSupplies",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:41"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:486"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7a9741d66a73120bad47a34c63bcadcd5bc673fcbc7b4d3f49b5492131e80ecf": {
      "address": "0x1475134741B2709864Cd3b54b3a16d1a9168cae5",
      "txHash": "0x50ad46a4a3cb7b69d1032c3d29957cda275f3433b2dca981d7d6821e6a604cf5",
      "layout": {
        "storage": [
          {
            "contract": "DankBankMarketData",
            "label": "virtualTokenPoolSupply",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DankBankMarketGSNData.sol:5"
          },
          {
            "contract": "DankBankMarketData",
            "label": "tokenPoolSupply",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DankBankMarketGSNData.sol:6"
          },
          {
            "contract": "DankBankMarketData",
            "label": "paymentToken",
            "type": "t_address",
            "src": "contracts/DankBankMarketGSNData.sol:7"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC2771ContextUpgradeable",
            "label": "_trustedForwarder",
            "type": "t_address",
            "src": "contracts/gsn/ERC2771ContextUpgradeable.sol:13"
          },
          {
            "contract": "ERC2771ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/gsn/ERC2771ContextUpgradeable.sol:47"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:33"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:36"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:39"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_tokenSupplies",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:41"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:490"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5bbd72e4853a8b09d92a32c7a29e05461ea54880169782f556df2697e1256a49": {
      "address": "0x72EdA0288D0c5D381A29a03bA49caf9E7E862393",
      "txHash": "0xd8b8b1fc85cc131d1ad235a582cbd04b2bb08b94747e628339bcf97fb7b91b62",
      "layout": {
        "storage": [
          {
            "contract": "DankBankMarketData",
            "label": "virtualTokenPoolSupply",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DankBankMarketGSNData.sol:5"
          },
          {
            "contract": "DankBankMarketData",
            "label": "tokenPoolSupply",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DankBankMarketGSNData.sol:6"
          },
          {
            "contract": "DankBankMarketData",
            "label": "paymentToken",
            "type": "t_address",
            "src": "contracts/DankBankMarketGSNData.sol:7"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC2771ContextUpgradeable",
            "label": "_trustedForwarder",
            "type": "t_address",
            "src": "contracts/gsn/ERC2771ContextUpgradeable.sol:13"
          },
          {
            "contract": "ERC2771ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/gsn/ERC2771ContextUpgradeable.sol:47"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:33"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:36"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:39"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_tokenSupplies",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:41"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:490"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "fcf04cee8a4b423b90b6bd1f2634a083eb1f3743e057b0e6d059be33869c50e7": {
      "address": "0x2e56ADa12a20Cd24c08f794688E311C55596EDAd",
      "txHash": "0x43ff5afe4fca8842a1ef212bc3a683e35bbe98a027d7e0d9fb9d56c6df8b3a2f",
      "layout": {
        "storage": [
          {
            "contract": "DankBankMarketData",
            "label": "virtualEthPoolSupply",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DankBankMarketData.sol:5"
          },
          {
            "contract": "DankBankMarketData",
            "label": "ethPoolSupply",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DankBankMarketData.sol:6"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:33"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:36"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:39"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_tokenSupplies",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:41"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:490"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}

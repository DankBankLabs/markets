{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x5B1D30d7f179849eD04fAC52B509f9A126A8B788",
    "txHash": "0xc8e9f8476a78747a6a8b5049af6459dbd5105ca7938c75a8c2ec07750e659643",
    "deployTransaction": {
      "hash": "0xc8e9f8476a78747a6a8b5049af6459dbd5105ca7938c75a8c2ec07750e659643",
      "type": 2,
      "accessList": [],
      "blockHash": "0x72fce8c0451b1da64794c1a6150039d0b901f328868aed6591817812399975e8",
      "blockNumber": 19,
      "transactionIndex": 0,
      "confirmations": 1,
      "from": "0x8DD94D36932Ae66A96c01Be4d8F76B3734f590a9",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x40c77ade"
      },
      "maxPriorityFeePerGas": {
        "type": "BigNumber",
        "hex": "0x3b9aca00"
      },
      "maxFeePerGas": {
        "type": "BigNumber",
        "hex": "0x45f42bbc"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 6,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0x3be79e4a303be6c8d2bc6ab9120a9edc54b114df0e52b8af56fabb51ba3927b3",
      "s": "0x0c7933d2196930add18e59384e144bb3947055eee31a544cb74070c8c94ad873",
      "v": 0,
      "creates": "0x5B1D30d7f179849eD04fAC52B509f9A126A8B788",
      "chainId": 31337
    }
  },
  "proxies": [
    {
      "address": "0xbc65e683172d5102f5eE33492f1fCE42d57588Ab",
      "txHash": "0xdbb754444cf97df2c65c9c122bf8ae137b40012e1eb7394d4bbde3666ef2a12c",
      "kind": "transparent"
    },
    {
      "address": "0x292b066b7dac9F8FF5323Ed2286A3f0eECD841a9",
      "txHash": "0x69a9436dadc6d3cdb99cbd09ae2bb75b0a28abf5dcae475a01e6b4d98335fc30",
      "kind": "transparent"
    },
    {
      "address": "0x20F88Db169f41c6dA637a4b21C150f03A4306F39",
      "txHash": "0x54eeee10005aee33d43e81b50c60bc97bb03c5ff06c7d9688f8960fec63108df",
      "kind": "transparent"
    },
    {
      "address": "0xb37952FD33584f236C406c88c5c5d8f29E57996B",
      "txHash": "0xf396d472db990066d507a3198670e42292f9a6c55b58ccabfa53462610764f96",
      "kind": "transparent"
    },
    {
      "address": "0x7Fae4A5Aa1fe95F2420F2108699DCbF570d8c1d2",
      "txHash": "0x98ebe667a79f659ff627fb07adb8a4743fe0112ca9d78f620cbf2cecfe90da36",
      "kind": "transparent"
    },
    {
      "address": "0xAC6df8707559855d9201006B2877F24b02fD2Fe6",
      "txHash": "0xd06b93ba590481f876a39965cf1423f20cc6f863799d781cf51b12fa01676eb7",
      "kind": "transparent"
    },
    {
      "address": "0x6bC8304c682D353F9CEdBF863E5596caE95fFaED",
      "txHash": "0xe274be74170267851e5e42ec252b9bad8744494f921af1418f21f2aaa77a28d4",
      "kind": "transparent"
    },
    {
      "address": "0x8cF5466cd980fD89E8Bf0a95E0A81345f041d357",
      "txHash": "0xd21d499527fb1f73ff0f4561c4c358234c67b9cc00c909ae9bd7739785be7e9e",
      "kind": "transparent"
    },
    {
      "address": "0x5e70B3Ae9B215b3d851b6C824bA64c95ff87fD25",
      "txHash": "0x9288b5f97d03657c9ee4f3b489a13d0f7133e689c0503242141ca8d8752b5eb8",
      "kind": "transparent"
    },
    {
      "address": "0xCc75e8e13D5fcF8aEE634c2209812a17E22aE8a7",
      "txHash": "0x41c73e1d4da8127918bed292a3e05e13237347e7f081a0335e14430aebdb3977",
      "kind": "transparent"
    }
  ],
  "impls": {
    "499ebef704220d3e5aa4074108231045089752af5fe00c3644146755691bb553": {
      "address": "0x1475134741B2709864Cd3b54b3a16d1a9168cae5",
      "txHash": "0x0da2f520c3d0ca746f081f6e046a70d23f101d22d891602473bb8b3d9e729695",
      "layout": {
        "storage": [
          {
            "contract": "DankBankMarketData",
            "label": "virtualEthPoolSupply",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DankBankMarketData.sol:5"
          },
          {
            "contract": "DankBankMarketData",
            "label": "ethPoolSupply",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DankBankMarketData.sol:6"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC2771ContextUpgradeable",
            "label": "_trustedForwarder",
            "type": "t_address",
            "src": "contracts/gsn/ERC2771ContextUpgradeable.sol:13"
          },
          {
            "contract": "ERC2771ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/gsn/ERC2771ContextUpgradeable.sol:47"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:33"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:36"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:39"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_tokenSupplies",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:41"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:490"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e6f6e744e8a724b6a9705875aaadede7826d22a6c93136e7e0cd8075bd8cf80e": {
      "address": "0x81A47880BefC90BdaE64C7BE3a533156C01Eac48",
      "txHash": "0xc207da204e2dd80d139553b31f0bde4f34ebc87caeb8bf639a54de6ec6e139f9",
      "layout": {
        "storage": [
          {
            "contract": "DankBankMarketData",
            "label": "virtualTokenPoolSupply",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DankBankMarketGSNData.sol:5"
          },
          {
            "contract": "DankBankMarketData",
            "label": "tokenPoolSupply",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DankBankMarketGSNData.sol:6"
          },
          {
            "contract": "DankBankMarketData",
            "label": "paymentToken",
            "type": "t_address",
            "src": "contracts/DankBankMarketGSNData.sol:7"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC2771ContextUpgradeable",
            "label": "_trustedForwarder",
            "type": "t_address",
            "src": "contracts/gsn/ERC2771ContextUpgradeable.sol:13"
          },
          {
            "contract": "ERC2771ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/gsn/ERC2771ContextUpgradeable.sol:47"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:33"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:36"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:39"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_tokenSupplies",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:41"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:490"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1bdfbf6ccc32a9730cc1cac42b132e0f35f7f59ed5811a466b32c6f2a49e6a76": {
      "address": "0x34Ec87E92AeeBb233C4cD0db5B739863AEcd960d",
      "txHash": "0x7c034f71f72492924eb74cb9ecee63c90b89440eecf97509d9559a894d0a6ea4",
      "layout": {
        "storage": [
          {
            "contract": "DankBankMarketGSNData",
            "label": "virtualTokenPoolSupply",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DankBankMarketGSNData.sol:5"
          },
          {
            "contract": "DankBankMarketGSNData",
            "label": "tokenPoolSupply",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DankBankMarketGSNData.sol:6"
          },
          {
            "contract": "DankBankMarketGSNData",
            "label": "paymentToken",
            "type": "t_address",
            "src": "contracts/DankBankMarketGSNData.sol:7"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC2771ContextUpgradeable",
            "label": "_trustedForwarder",
            "type": "t_address",
            "src": "contracts/gsn/ERC2771ContextUpgradeable.sol:13"
          },
          {
            "contract": "ERC2771ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/gsn/ERC2771ContextUpgradeable.sol:47"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:33"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:36"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:39"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "_tokenSupplies",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:41"
          },
          {
            "contract": "ERC1155LPTokenUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "contracts/ERC1155LPTokenUpgradeable.sol:490"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
